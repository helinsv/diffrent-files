1. cd c:/users/галинка/desktop/web
2. git init (creates a new Git repository)
3. git status  (inspects the contents of the working directory and staging area)
4. git add . (adds files from the working directory to the staging area)
5. git status
6. git commit -m "first commit" (permanently stores file changes from the staging area in the repository)
7. git log (shows a list of all previous commits)

Створити репозиторій
1. git remote add origin https://github.com/helinsv/web.git
2. git push -u origin master


---клонування
HTTPS 
1. Звідки? https://github.com/helinsv/html-jQuery.git
2. Створюэмо папку куди клонувати
3. заходимо в директорію cd /c/users/галинка/desktop/web/copy
4. git clone https://github.com/helinsv/html-jQuery.git
або 
git clone --depth=16 https://github.com/angular/angular-phonecat.git
5. Переходимо в потрыбну версыю git checkout -f step-0

git diff filename (shows the difference between the working directory and the staging area)
git show HEAD

-------- changes made to your Git project
     git checkout HEAD changes.txt (Discards changes in the working directory.)
     git reset HEAD filename (Unstages file changes in the staging area.)
     git reset SHA (Can be used to reset to a previous commit in your commit history.)


-------- Git branch workflow.
    git branch: Lists all a Git project's branches
    git branch branch_name: Creates a new branch.
    git checkout branch_name: Used to switch from one branch to another/переходимо у відпов. branch
    git merge branch_name: Used to join file changes from one branch to another/зєднання
    git branch -d branch_name: Deletes the branch specified./видалення branch
    
-------- following commands    
    git clone: Creates a local copy of a remote.
    git remote -v: Lists a Git project's remotes.
    git fetch: Fetches work from the remote into the local copy.
    git merge origin/master: Merges origin/master into your local branch.
    git push origin <branch_name>: Pushes a local branch to the origin remote.
