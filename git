https://githowto.com/ru

1. cd c:/users/галинка/desktop/web
2. git init (creates a new Git repository)
3. git status  (inspects the contents of the working directory and staging area)
4. git add . (adds files from the working directory to the staging area)
5. git status
6. git commit -m "first commit" (permanently stores file changes from the staging area in the repository)
   git commit --amend -m "Add an author/email comment"(додаємо до існуючого останього коміту правки)
7. git log (shows a list of all previous commits)

Створити репозиторій
1. git remote add origin https://github.com/helinsv/web.git
2. git push -u origin master

Переглянути який є віддалений репозиторій 
git remote

-------- changes made to your Git project     
CHECKOUT
- Перейти до певного комміту
git checkout b737544

- Перейти до останього комміту
git checkout master

- Відмінити зроблені зміни в мастер (14пункт)
//git checkout HEAD changes.txt (Discards changes in the working directory.)
git checkout hello.html

- Відміна дій "git add hello.html"
//git reset HEAD filename (Unstages file changes in the staging area.)
git reset HEAD hello.html
щоб змінити і сам файл (попередній пункт) "git checkout hello.html"

- Видалення комітів зроблених після тегу v1
//git reset SHA (Can be used to reset to a previous commit in your commit history.)
git reset --hard v1
git reset --hard 9020399
git log --all (показує всі коменти з видаленими)

---клонування
HTTPS 
1. Звідки? https://github.com/helinsv/html-jQuery.git
2. Створюэмо папку куди клонувати
3. заходимо в директорію cd /c/users/галинка/desktop/web/copy
4. git clone https://github.com/helinsv/html-jQuery.git
або 
git clone --depth=16 https://github.com/angular/angular-phonecat.git
5. Переходимо в потрыбну версыю git пcheckout -f step-0

git diff filename (shows the difference between the working directory and the staging area)
git show HEAD

-------- Git branch workflow.
    git branch: Lists all a Git project's branches
    git checkout -b branch_name (то саме що зробити п.1 і п.2, створити і перейти в нову гілку)
    1. git branch branch_name: Creates a new branch.
    2. git checkout branch_name: Used to switch from one branch to another/переходимо у відпов. branch)
    
    git merge branch_name: Used to join file changes from one branch to another/зєднання
    git branch -d branch_name: Deletes the branch specified./видалення branch
    
-------- following commands    
    git clone: Creates a local copy of a remote.
    git remote -v: Lists a Git project's remotes.
    git fetch: Fetches work from the remote into the local copy.
    git merge origin/master: Merges origin/master into your local branch.
    git push origin <branch_name>: Pushes a local branch to the origin remote.
 
///////////////////
делаем откат изменений в репозитории для примера на два коммита назад
git reset --hard HEAD~2

///робота над новим куском коду
git add .
git commit -m test1
git branch new
git checkout new
git add.
git commit -m new1
git add.
git commit -m new2
git checkout master
git merge new
---буде писати що є різні файли треба видалити що лишнє є в коді. Треба вручну ці зміни зробити
git merge new - обєднує дві гілки
git branch -d new
Залишилася одна гілка з останьою версією.

